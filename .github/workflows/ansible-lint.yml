---
name: Ansible Lint
env:
  PIP_DEFAULT_TIMEOUT: 100
on: [pull_request, push]    # yamllint disable-line
jobs:
  ansible-linting:
    name: Ansible Linting
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.11
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install Package
        run: poetry install --no-interaction

      - name: List installed packages
        shell: bash -l {0}
        run: |
          source $VENV
          pip list

      - name: Run YAML Lint
        run: poetry run yamllint .

      - name: Run Ansible Lint
        run: poetry run ansible-lint
